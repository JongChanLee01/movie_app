{"version":3,"sources":["movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6QAkCeA,MA/Bf,YAAuD,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAC1C,OACE,sBAAKC,UAAU,QAAf,UACE,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,gBAAd,SACGD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAgBL,UAAU,gBAA1B,SAA2CI,GAAlCC,QAGb,oBAAGL,UAAU,iBAAb,UAA+BH,EAAQS,MAAM,EAAG,KAAhD,gBC8DKC,G,wNAjEbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAUVC,U,sBAAY,8BAAAC,EAAA,sEAMEC,IAAMC,IAAI,4DANZ,gBAIEJ,EAJF,EAGRK,KACGA,KAAOL,OAIZ,EAAKM,SAAS,CAACN,SAAQD,WAAW,IARxB,2C,uDAUZ,WACEQ,KAAKN,c,oBASP,WACE,MAA4BM,KAAKT,MAA1BC,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,OAClB,OACE,yBAASV,UAAU,YAAnB,SAIGS,EAEC,qBAAKT,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGA,qBAAKA,UAAU,SAAf,SACGU,EAAOP,KAAI,SAAAe,GAAK,OAEjB,aADA,CACC,EAAD,CAEEC,GAAMD,EAAMC,GACZxB,KAAQuB,EAAMvB,KACdC,MAASsB,EAAMtB,MACfC,QAAWqB,EAAMrB,QACjBC,OAAUoB,EAAME,mBAChBrB,OAAUmB,EAAMnB,QANTmB,EAAMC,e,GAlDXE,IAAMC,YCPxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,Y","file":"static/js/main.398c4592.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Movie({year, title, summary, poster, genres}){\r\n    return (\r\n      <div className=\"movie\">\r\n        <img src={poster} alt={title} title={title} />\r\n        <div className=\"movie__data\">\r\n          <h3 className=\"movie__title\">{title}</h3>\r\n          <h5 className=\"movie__year\">{year}</h5>\r\n          <ul className=\"movie__genres\">\r\n            {genres.map((genre, index) => (\r\n              <li key={index} className=\"genres__genre\">{genre}</li>\r\n            ))}\r\n          </ul>\r\n          <p className=\"movie__summary\">{summary.slice(0, 140)}...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n// const summary = asdfqwera sdfqu ewoiruopq\r\n// summary.length -->summary에 들어가 있는 데이터의 길이가 나옴\r\n// summary.slice( 0, 10) --> summary.slice( 시작점, 10개(끝점) ) 0 1 2 3 4 5 6 7 8 9\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  // arrayOf는 component에 객체 배열을 전달하기 위함\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./movie\";\nimport \"./App.css\";\nimport \"./movie.css\";\n\n// component를 만들 때마다 모든 것을 다 구현하지 않기 위해서 extend from을 함\n// react component에서 확장을 하였기 때문에 render method를 사용.\n// function component는 함수이고 무언가를 return해야 함.\n// class component는 class고 react component로 부터 확장됨.\n// react는 자동적으로 모든 class component의 render method를 실행하고자 함\nclass App extends React.Component{\n  state = {\n    isLoading: true,\n    movies: []\n  };\n\n  // js에게 componentDidMount함수가 끝날 때까지 시간이 약간 걸릴 수 있다고 알려주어야함.\n  // 그걸 위해서\n  // async componentDidMount(){\n  //   const movies = axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n  // }\n  // 이렇게 해주거나 아래처럼 하면됨\n\n  getMovies = async() => {\n    // movies.data.data.movies를 아래처럼 단축시킴\n    const {\n      data: {\n         data: {movies}\n        }\n      } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    // this.setState({movies:movies}); 아래처럼 줄일 수 있음 무비중 하나는 state무비 하나는 axios 무비\n    this.setState({movies, isLoading: false});\n  };\n  componentDidMount(){\n    this.getMovies();\n\n    // 밑에 터미널 창에서 ---- npm i axios\n    // js에서 data를 fetch하는 방법은 fetch를 사용함. 하지만 더 좋은 방법으론 Axios가 있음\n    // axios는 fetch위에 있는 작은 layer같은 것\n  }\n\n  //render 안에 className으로 class이름을 정하는 이유는 JS의 class는 11번째 줄에 class App extends React.Component의 class를 의미함\n  //react는 class를 혼란스러워 하기 때문에 className으로 하는 것이 좋음\n  render(){\n    const {isLoading, movies} = this.state;\n    return (\n      <section className=\"container\">\n      {/* {this.state.isLoading ? \"Loading\" : \"We are ready\"} */}\n        \n        {/* 위에 const {isLoading} = this.state; (ES6 코드)를 새로 작성하여 밑에 this.state를 더이상 안붙여도됨*/}\n        {isLoading \n          ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n          ) : (\n            <div className=\"movies\">\n              {movies.map(movie => (\n              // api에서 값을 받아오는 것이므로 movie.뒤에 있는 값은 api에서 확인 후 입력한 것\n              <Movie\n                key = {movie.id}\n                id = {movie.id}\n                year = {movie.year}\n                title = {movie.title}\n                summary = {movie.summary}\n                poster = {movie.medium_cover_image}\n                genres = {movie.genres}\n              />\n              ))}\n            </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('apple'));\n\n"],"sourceRoot":""}